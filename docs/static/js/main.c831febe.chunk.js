(this.webpackJsonpentish=this.webpackJsonpentish||[]).push([[0],{266:function(e,n,t){"use strict";t.r(n);var a=t(4),r=t.n(a),c=t(5),i=t.n(c)()(r.a);i.push([e.i,"._27KvXhK1Cn3xeSy_ERUuYO { /*!*/ }\n.iCwJ4OetHHYzpK6q4N79Q {\n\ndisplay: flex;\nflex-direction: row;\nmargin: 24px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAtQ29udGFpbmVyLm1vZHVsZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxJQUFJLEVBQUU7QUFDZDtBQUNBLGNBQWM7O0FBRWQsYUFBYTtBQUNiLG1CQUFtQjtBQUNuQixZQUFZO0FBQ1oiLCJmaWxlIjoic3JjL0FwcC1Db250YWluZXIubW9kdWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jbHMxIHsgLyohKi8gfVxuLmNsczIge1xuY29tcG9zZXM6IGNsczE7XG5cbmRpc3BsYXk6IGZsZXg7XG5mbGV4LWRpcmVjdGlvbjogcm93O1xubWFyZ2luOiAyNHB4O1xufSJdfQ== */","",{version:3,sources:["webpack://./src/src/App-Container.module.css","webpack://./src/App-Container.module.css"],names:[],mappings:"AAAA,2BAAQ,IAAI,EAAE;AACd;;AAGA,aAAa;AACb,mBAAmB;AACnB,YAAY;AACZ;ACCA,wdAAwd",sourcesContent:[".cls1 { /*!*/ }\n.cls2 {\ncomposes: cls1;\n\ndisplay: flex;\nflex-direction: row;\nmargin: 24px;\n}",".cls1 { /*!*/ }\n.cls2 {\ncomposes: cls1;\n\ndisplay: flex;\nflex-direction: row;\nmargin: 24px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAtQ29udGFpbmVyLm1vZHVsZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxJQUFJLEVBQUU7QUFDZDtBQUNBLGNBQWM7O0FBRWQsYUFBYTtBQUNiLG1CQUFtQjtBQUNuQixZQUFZO0FBQ1oiLCJmaWxlIjoic3JjL0FwcC1Db250YWluZXIubW9kdWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jbHMxIHsgLyohKi8gfVxuLmNsczIge1xuY29tcG9zZXM6IGNsczE7XG5cbmRpc3BsYXk6IGZsZXg7XG5mbGV4LWRpcmVjdGlvbjogcm93O1xubWFyZ2luOiAyNHB4O1xufSJdfQ== */"],sourceRoot:""}]),i.locals={cls1:"_27KvXhK1Cn3xeSy_ERUuYO",cls2:"iCwJ4OetHHYzpK6q4N79Q _27KvXhK1Cn3xeSy_ERUuYO"},n.default=i},267:function(e,n,t){"use strict";t.r(n);var a=t(4),r=t.n(a),c=t(5),i=t.n(c)()(r.a);i.push([e.i,"._2BYnjqztxulEI7KbCixh7w { /*!*/ }\n._3eFiO1hfUNAgpUjkXbgij2 {\n\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: space-between;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAtRGF0YWJhc2UubW9kdWxlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFRLElBQUksRUFBRTtBQUNkO0FBQ0EsY0FBYzs7QUFFZCxhQUFhO0FBQ2IsbUJBQW1CO0FBQ25CLGVBQWU7QUFDZiw4QkFBOEI7QUFDOUIiLCJmaWxlIjoic3JjL0FwcC1EYXRhYmFzZS5tb2R1bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNsczEgeyAvKiEqLyB9XG4uY2xzMiB7XG5jb21wb3NlczogY2xzMTtcblxuZGlzcGxheTogZmxleDtcbmZsZXgtZGlyZWN0aW9uOiByb3c7XG5mbGV4LXdyYXA6IHdyYXA7XG5qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59Il19 */","",{version:3,sources:["webpack://./src/src/App-Database.module.css","webpack://./src/App-Database.module.css"],names:[],mappings:"AAAA,2BAAQ,IAAI,EAAE;AACd;;AAGA,aAAa;AACb,mBAAmB;AACnB,eAAe;AACf,8BAA8B;AAC9B;ACCA,ohBAAohB",sourcesContent:[".cls1 { /*!*/ }\n.cls2 {\ncomposes: cls1;\n\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: space-between;\n}",".cls1 { /*!*/ }\n.cls2 {\ncomposes: cls1;\n\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\njustify-content: space-between;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAtRGF0YWJhc2UubW9kdWxlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFRLElBQUksRUFBRTtBQUNkO0FBQ0EsY0FBYzs7QUFFZCxhQUFhO0FBQ2IsbUJBQW1CO0FBQ25CLGVBQWU7QUFDZiw4QkFBOEI7QUFDOUIiLCJmaWxlIjoic3JjL0FwcC1EYXRhYmFzZS5tb2R1bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNsczEgeyAvKiEqLyB9XG4uY2xzMiB7XG5jb21wb3NlczogY2xzMTtcblxuZGlzcGxheTogZmxleDtcbmZsZXgtZGlyZWN0aW9uOiByb3c7XG5mbGV4LXdyYXA6IHdyYXA7XG5qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59Il19 */"],sourceRoot:""}]),i.locals={cls1:"_2BYnjqztxulEI7KbCixh7w",cls2:"_3eFiO1hfUNAgpUjkXbgij2 _2BYnjqztxulEI7KbCixh7w"},n.default=i},268:function(e,n,t){"use strict";t.r(n);var a=t(1),r=t.n(a),c=t(25),i=t.n(c),o=(t(38),t(31)),s=t(18),u=t.n(s),l=t(6),f=t.n(l);t(251);var p=t(0);function h(e){var n,t=Object(a.useRef)(null);return Object(a.useEffect)((function(){if(t){var e=t.current;e&&f.a.highlightElement(e)}})),Object(p.jsx)("pre",{style:{fontSize:"12px"},children:Object(p.jsx)("code",{ref:t,className:"language-".concat(e.language),dangerouslySetInnerHTML:{__html:(null===(n=e.children)||void 0===n?void 0:n.toString())||""}})})}f.a.registerLanguage("entish",(function(e){return{name:"Entish",aliases:["ent"],contains:[f.a.C_LINE_COMMENT_MODE,f.a.COMMENT("/\\*","\\*/",{contains:[{scope:"doc",begin:"@\\w+"}]}),{scope:"keyword",begin:"\u2234"},{scope:"keyword",begin:":-"},{begin:[/\)/,/\?/],beginScope:{2:"keyword"}},{begin:[/\)/,/\./],beginScope:{2:"keyword"}},{scope:"number",begin:f.a.NUMBER_RE},{begin:[/[a-z_]+/,/\(/],beginScope:{1:"title.function"}},{scope:"operator",begin:/-|\+|\/|\*|\^|&|\||>|<|=|>=|<=|!=/},{scope:"string",begin:/[A-Z]/,end:/[a-zA-Z]+/},{scope:"variable",begin:/[a-z_]+/},{begin:[/,\s+/,/\?/],beginScope:{2:"variable.language"}}]}}));var g,d=t(19),m=t(26),b=t(20),y=t(27),v=t(32),w=t(33),A=t(28),j=t.n(A),x='{\n  function joinClauses(type, first, rest) {\n    if (first.type === \'fact\' && rest.length === 1 && (rest[0].type === \'conjunction\' || rest[0].type === \'disjunction\')) {\n      rest[0].clauses.unshift(first);\n      return rest[0];\n    }\n    return {\n      type: type,\n      clauses: [first].concat(rest),\n    };\n  }\n}\n\nstatements\n  = statement+\n\nstatement\n  = comment:comment "\\n"? { return comment }\n  / inference:inference "." { return inference }\n  / claim:claim "." { return claim }\n  / fact:fact "." { return fact }\n  / query:clause "?" { return { type: \'query\', query: query } }\n  / [ \\t\\r\\n]+ { return null }\n\nfact\n  = whitespace name:variable "(" args:arguments ")" whitespace { return { type: \'fact\', table: name.value, fields: args.arguments } }\n  / whitespace "~" fact:fact { return { ...fact, negative: true } }\n\nexpr\n  = addition\n  / multiplication \n  / function\n  / variable\n  / string \n  / integer\n\nterm\n  = multiplication\n  / factor\n\nfactor\n  = parenthetical_expr\n  / function\n  / variable\n  / integer \n\naddition\n  = left:term whitespace operator:([+\\-]) whitespace right:expr { return { type: \'binary_operation\', operator, left, right } }\n\nmultiplication\n  = left:factor whitespace operator:([*/]) whitespace right:expr { return { type: \'binary_operation\', operator, left, right } }\n\nparenthetical_expr\n  = "(" " "* expr:expr " "* ")" { return expr }\n\nfunction\n  = name:variable "(" args:arguments ")" { return { type: \'function\', function: name.value, arguments: args.arguments } }\n\narguments\n  = whitespace first:expr rest:nextargs* whitespace { return { type: \'arguments\', arguments: [first].concat(rest) } }\n\nnextargs\n  = "," whitespace expr:expr { return expr }\n\ninference\n  = left:fact ":-" whitespace right:clause { return { type: \'inference\', left, right } }\n\nclause\n  = conjunction\n  / disjunction\n  / "(" whitespace clause:clause whitespace ")" { return clause }\n  / fact\n  / comparison\n\nconjunction\n  = "(" first:clause ")" whitespace rest:next_conjunction+ { return joinClauses(\'conjunction\', first, rest) }\n  / first:fact rest:next_conjunction+ { return joinClauses(\'conjunction\', first, rest) }\n\ndisjunction\n  = "(" first:fact ")" whitespace rest:next_disjunction+ { return joinClauses(\'disjunction\', first, rest) }\n  / first:fact rest:next_disjunction+ { return joinClauses(\'disjunction\', first, rest) }\n\nnext_conjunction\n  = "&" whitespace clause:clause { return clause }\n\nnext_disjunction\n  = "|" whitespace clause:clause { return clause }\n\nclaim\n  = "\u2234" claim:fact { return { ...claim, type: \'claim\' } }\n\ncomparison\n  = left:expr whitespace operator:comparison_operator whitespace right:expr { return { type: \'comparison\', operator, left, right }}\n\ncomparison_operator\n  = op:"=" { return op }\n  / op:"!=" { return op }\n  / op:">" { return op }\n  / op:"<" { return op }\n  / op:">=" { return op }\n  / op:"<=" { return op }\n\ncomment\n  = "//" comment:[^\\n]* { return { type: \'comment\', value: comment.join(\'\').trim() } }\n  / "/*" comment:(!"*/" .)* "*/" { return { type: \'comment\', value: comment.flat().join(\'\').trim() }}\n\nstring\n  = name:([A-Z][A-Za-z_]+) { return { type: \'string\', value: name[0] + name[1].join(\'\') } }\n\nvariable\n  = name:([a-z_]+) { return { type: \'variable\', value: name.join(\'\') } }\n  / "?" { return { type: \'variable\', value: \'?\' } }\n\ninteger\n  = negative:([-])? digits:([0-9]+) { const i = parseInt(digits.join(\'\'), 10); return { type: \'integer\', value: negative ? -i : i } }\n\nwhitespace\n  = [ \\t\\r\\n]*\n';g=x;var C=function(e){Object(y.a)(t,e);var n=Object(v.a)(t);function t(){return Object(b.a)(this,t),n.apply(this,arguments)}return t}(Object(w.a)(Error));var B=function(){function e(){Object(b.a)(this,e),this.parser=void 0,this.tables={},this.parser=j.a.generate(g)}return Object(m.a)(e,[{key:"exec",value:function(e){var n=this;switch(e.type){case"comment":return;case"fact":return this.loadFact(e),void console.log("added ".concat(O(e)));case"inference":console.log("inferring ".concat(F(e)));var t=this.loadInference(e);return t.forEach((function(e){return n.loadFact(e)})),void t.forEach((function(e){return console.log("added ".concat(O(e)))}));case"claim":if(console.log("testing ".concat(E(e))),this.testClaim(e)===!!e.negative)throw new C("false claim: ".concat(E(e)));return void console.log("verified ".concat(E(e)));case"query":return console.log("query: ".concat(I(e))),void this.query(e).forEach((function(e){return console.log("found: ".concat(O(e)))}))}}},{key:"load",value:function(e){var n=this.parser.parse(e).filter((function(e){return e}));for(var t in n){var a=n[t];this.exec(a)}}},{key:"loadFact",value:function(e){if(e.negative)this.tables[e.table]=this.tables[e.table].filter((function(n){return!n.every((function(n,t){return function(e,n){if(e.type!==n.type)return!1;if("value"in e&&"value"in n)return e.value===n.value;throw new C("incomparable types: ".concat(e.type," and ").concat(n.type))}(e.fields[t],n)}))}));else{if(this.tables[e.table]||(this.tables[e.table]=[]),e.fields.some((function(e){return"string"!==e.type&&"integer"!==e.type})))throw new C("facts must be grounded with strings or integers: ".concat(O(e)));this.tables[e.table].push(e.fields)}}},{key:"query",value:function(e){return this.searchInferenceTree(e.query).map((function(e){return e.facts})).flat()}},{key:"loadInference",value:function(e){var n=this,t=this.searchInferenceTree(e.right).map((function(t){return n.ground(e.left,t)}));return t.some((function(e){return e.fields.some((function(e){return"aggregation"===e.type}))}))?function(e,n){var t={};return e.forEach((function(e){var a=n(e);t[a]=t[a]||[],t[a].push(e)})),Object.keys(t).map((function(e){return t[e]}))}(t,(function(e){return e.fields.filter((function(e){return"string"===e.type||"integer"===e.type})).map((function(e){return e.value})).join("-")})).map((function(e){var t=e[0];return{type:"fact",table:t.table,fields:t.fields.map((function(t,a){return n.aggregate(t,a,e)}))}})):t}},{key:"aggregate",value:function(e,n,t){switch(e.type){case"string":case"integer":return e;case"aggregation":return{type:"integer",value:t.map((function(e){var t=e.fields[n];if("aggregation"!==t.type)throw new C("TODO");return t.arguments})).flat().reduce((function(e,n){return e+n}),0)};default:throw new C("TODO")}}},{key:"ground",value:function(e,n){var t=this;return{type:"fact",table:e.table,fields:e.fields.map((function(e){var a=t.evaluateExpression(e,n);switch(typeof a){case"number":return{type:"integer",value:a};case"string":return{type:"string",value:a};case"object":return a;default:throw new C("unknown expression result type ".concat(typeof a))}})),negative:e.negative}}},{key:"searchInferenceTree",value:function(e){var n=this;switch(e.type){case"fact":return this.tables[e.table].map((function(t){return n.bind(t,e)})).filter((function(e){return void 0!==e}));case"conjunction":var t=[];return this.join(e.clauses.map((function(e){return n.searchInferenceTree(e)})),[],t),t.map((function(e){return n.reduceBindings(e)})).filter((function(e){return void 0!==e}));case"disjunction":return e.clauses.map((function(e){return n.searchInferenceTree(e)})).flat();case"comparison":return[{facts:[],values:{},comparisons:[e]}]}}},{key:"join",value:function(e,n,t){if(0!==e.length){var a,r=e[0],c=e.slice(1),i=Object(d.a)(r);try{for(i.s();!(a=i.n()).done;){var o=a.value;this.join(c,n.concat([o]),t)}}catch(s){i.e(s)}finally{i.f()}}else t.push(n)}},{key:"reduceBindings",value:function(e){var n=this;try{return e.reduce((function(e,t){Object.keys(e.values).forEach((function(n){if(t.values[n]&&t.values[n]!==e.values[n])throw new C("bindings disagree: ".concat(t.values[n]," != ").concat(e.values[n]))}));var a={facts:e.facts.concat(t.facts),values:Object.assign(e.values,t.values),comparisons:[]};return t.comparisons.forEach((function(e){if(!n.compare(e,a))throw new C("false comparison: ".concat(U(e),", ").concat(a.values))})),a}),{facts:[],values:{},comparisons:[]})}catch(t){if(!(t instanceof C))throw t;return}}},{key:"bind",value:function(e,n){var t=e.map((function(e,t){var a=n.fields[t];switch(a.type){case"string":case"integer":return e.value===a.value&&["".concat(n.table,"[").concat(t,"]"),e.value];case"variable":return"?"===a.value?["".concat(n.table,"[").concat(t,"]"),e.value]:[a.value,e.value];default:throw new C("can't handle ".concat(a.type," ").concat(Q(a)," in clause"))}}));if(!t.some((function(e){return!e})))return{facts:[{type:"fact",table:n.table,fields:e}],values:Object.fromEntries(t),comparisons:[]}}},{key:"compare",value:function(e,n){var t=this.evaluateExpression(e.left,n),a=this.evaluateExpression(e.right,n);if(t instanceof Object||a instanceof Object)throw new Error("can't compare aggregations");switch(e.operator){case"=":return t===a;case"!=":return t!==a;case">":return t>a;case">=":return t>=a;case"<":return t<a;case"<=":return t<=a}}},{key:"testClaim",value:function(e){var n=this.tables[e.table];if(n){var t,a=Object(d.a)(n);try{var r=function(){var n=t.value;return n.length!==e.fields.length?"continue":e.fields.every((function(e,t){return e.type===n[t].type&&e.value===n[t].value}))?{v:!0}:void 0};for(a.s();!(t=a.n()).done;){var c=r();if("continue"!==c&&"object"===typeof c)return c.v}}catch(i){a.e(i)}finally{a.f()}}return!1}},{key:"evaluateFunction",value:function(e,n){var t=this;switch(e.function){case"floor":var a=this.evaluateExpression(e.arguments[0],n);if("number"!==typeof a)throw new C("floor requires numeric argument, got ".concat(a));return Math.floor(a);case"sum":return{type:"aggregation",function:"sum",arguments:e.arguments.map((function(e){return t.evaluateExpression(e,n)}))};default:throw new C("can't handle function ".concat(e.function))}}},{key:"evaluateBinaryOperation",value:function(e,n){var t=this.evaluateExpression(e.left,n);if("number"!==typeof t)throw new C("binary operation requires number on left-hand side, got ".concat(t));var a=this.evaluateExpression(e.right,n);if("number"!==typeof a)throw new C("binary operation requires number on right-hand side, got ".concat(a));switch(e.operator){case"+":return t+a;case"-":return t-a;case"/":return t/a;case"*":return t*a;case"^":return Math.pow(t,a)}}},{key:"evaluateExpression",value:function(e,n){switch(e.type){case"binary_operation":return this.evaluateBinaryOperation(e,n);case"function":return this.evaluateFunction(e,n);case"variable":return n.values[e.value];case"string":case"integer":return e.value;case"aggregation":return e}}}]),e}();function F(e){return"".concat(O(e.left)," :- ").concat(U(e.right),".")}function I(e){return"".concat(U(e.query),"?")}function O(e){return"".concat(e.negative?"~":"").concat(e.table,"(").concat(e.fields.map((function(e){return Q(e)})).join(", "),")")}function U(e){switch(e.type){case"fact":return O(e);case"conjunction":return"("+e.clauses.map((function(e){return U(e)})).join(" & ")+")";case"disjunction":return"("+e.clauses.map((function(e){return U(e)})).join(" | ")+")";case"comparison":return"".concat(Q(e.left)," ").concat(e.operator," ").concat(Q(e.right))}}function Q(e){switch(e.type){case"string":return e.value;case"integer":return e.value.toString();case"variable":return e.value;case"binary_operation":return"".concat(Q(e.left)," ").concat(e.operator," ").concat(Q(e.right));case"function":return"".concat(e.function,"(").concat(e.arguments.map((function(e){return Q(e)})).join(", "),")");case"aggregation":return"".concat(e.function,"(").concat(e.arguments.map((function(e){return"object"===typeof e?Q(e):e})).join(", "),")")}}function E(e){return"\u2234 ".concat(O(e))}var N="// Auric has a Strength of 16\nattribute(Auric, Strength, 16).\n\n// Auric has a Wisdom of 16\nattribute(Auric, Wisdom, 9).\n\n// A character's bonus is half their attribute score minus ten\nbonus(character, attr, floor((score-10)/2)) :- attribute(character, attr, score).\n\n// Therefore, Auric has a Strength bonus of 3\n\u2234 bonus(Auric, Strength, 3).\n\n// Therefore, Auric has a Wisdom bonus of -1\n\u2234 bonus(Auric, Wisdom, -1).\n\n// Full Plate has the clumsy tag\ntag(FullPlate, Clumsy).\n\n// Auric is wearing Full Plate\nwearing(Auric, FullPlate).\n\n// Given gear has a tag and the character is wearing the gear, add the tag to the character\ntag(character, tag) :- wearing(character, gear) & tag(gear, tag).\n\n// Therefore Auric has the Clumsy tag\n\u2234 tag(Auric, Clumsy).\n\n// Full Plate has a weight of 4\nweight(FullPlate, 4).\n\n// Full Plate has an armor bonus of 3\narmor(FullPlate, 3).\n\n// Let's give Auric a shield too\nweight(RoundShield, 1).\narmor(RoundShield, 1).\nwielding(Auric, RoundShield).\n\n// Given a character, their armor is the sum of the armor of gear they are wearing/wielding\narmor(character, sum(armor)) :- (wearing(character, gear) | wielding(character, gear)) & armor(gear, armor).\n\n// Therefore Auric has 4 armor\n\u2234 armor(Auric, 4).\n\n// What's Auric's strength bonus again?\nbonus(Auric, Strength, ?)?\n\n// A TwoHandedSword has a weight of 2\nweight(TwoHandedSword, 2).\n\n// A TwoHandedSword has a damage bonus of 1\ndamage(TwoHandedSword, 1).\n\n// A TwoHandedSword has the Close tag\ntag(TwoHandedSword, Close).\n\n// Auric is wielding a Two Handed Sword\nwielding(Auric, TwoHandedSword).\n\n// Given a character, their load is the sum of the weights of gear they are wearing and wielding\nload(character, sum(weight)) :- (wearing(character, gear) | wielding(character, gear)) & weight(gear, weight).\n\n// Therefore Auric has a load of 7\n\u2234 load(Auric, 7).\n\n// What's he wielding?\nwielding(Auric, ?)?\n\n// Auric has the Barbarian class\nclass(Auric, Barbarian).\n\n// The max load of a Barbarian is 8 plus their strength bonus\nmax_load(character, 8+str) :- class(character, Barbarian) & bonus(character, Strength, str).\n\n// Therefore Auric's max load is 11\n\u2234 max_load(Auric, 11).\n\n// Given a character and max load, they are tagged with Encumbered if their load is greater than their max load\ntag(character, Encumbered) :- load(character, load) & max_load(character, max_load) & load > max_load.\n\n// Therefore Auric is not Encumbered\n\u2234 ~tag(Auric, Encumbered).\n\n// Auric has the move \"Full Plate and Packing Steel\"\nmove(Auric, FullPlateAndPackingSteel).\n\n// The move \"Full Plate and Packing Steel\" negates the Clumsy tag\n~tag(character, Clumsy) :- move(character, FullPlateAndPackingSteel).\n\n// Auric is not Clumsy\n\u2234 ~tag(Auric, Clumsy).\n",W=t(29),L=t.n(W),Z=t(30),z=t.n(Z),k=u()("div",null,{displayName:"Container",styles:L.a}),S=u()("div",null,{displayName:"Database",styles:z.a});function Y(e){var n=e.name,t=e.rows;return Object(p.jsxs)("div",{children:[Object(p.jsx)("h1",{children:n}),Object(p.jsx)("table",{children:Object(p.jsx)("tbody",{children:t.map((function(e,t){return Object(p.jsx)("tr",{children:e.map((function(e,a){return Object(p.jsx)("td",{children:e.value},"".concat(n,"-").concat(t,"-").concat(a))}))},"".concat(n,"-").concat(t))}))})})]})}var X=function(){var e=new B;return e.load(N),Object(p.jsxs)(k,{children:[Object(p.jsx)(h,{language:"entish",children:N}),Object(p.jsx)(S,{children:Object.entries(e.tables).map((function(e){var n=Object(o.a)(e,2),t=n[0],a=n[1];return Object(p.jsx)(Y,{name:t,rows:a},t)}))})]})},G=function(e){e&&e instanceof Function&&t.e(3).then(t.bind(null,269)).then((function(n){var t=n.getCLS,a=n.getFID,r=n.getFCP,c=n.getLCP,i=n.getTTFB;t(e),a(e),r(e),c(e),i(e)}))};i.a.render(Object(p.jsx)(r.a.StrictMode,{children:Object(p.jsx)(X,{})}),document.getElementById("root")),G()},29:function(e,n,t){var a=t(12),r=t(266);"string"===typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var c={insert:"head",singleton:!1};a(r,c);e.exports=r.locals||{}},30:function(e,n,t){var a=t(12),r=t(267);"string"===typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var c={insert:"head",singleton:!1};a(r,c);e.exports=r.locals||{}},38:function(e,n,t){var a=t(12),r=t(39);"string"===typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var c={insert:"head",singleton:!1};a(r,c);e.exports=r.locals||{}},39:function(e,n,t){"use strict";t.r(n);var a=t(4),r=t.n(a),c=t(5),i=t.n(c)()(r.a);i.push([e.i,"body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;AACpC;;AAEA;EACE;aACW;AACb",sourcesContent:["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n"],sourceRoot:""}]),n.default=i}},[[268,1,2]]]);
//# sourceMappingURL=main.c831febe.chunk.js.map