{"version":3,"sources":["webpack:///./src/App-Container.module.css?18f8","webpack:///./src/App-Navbar.module.css?0aad","webpack:///./src/index.css?cfe4","index.css","raw-loader.js","entish.peg","rules sync /^/.*$","rules/dungeon_world/barbarian.md","rules/dungeon_world/characters.md","App-Container.module.css","App-Navbar.module.css","entmoot.ts","dungeon_world.ent","Playground.tsx","useMonacoEntish.ts","MarkdownRules.tsx","Rules.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_EXPORT___","push","path","require","fs","REQUIRE_PATH_TEST","register","pathMatcher","Module","orginalLoad","_load","cwd","process","request","_parent","match","readFileSync","join","dirname","filename","apply","this","arguments","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","document","JSDOM","globalThis","window","grammar","staticGrammar","toString","Entception","BindingMismatch","type","TODO","equal","expr1","expr2","fields","length","every","f","rollToString","value","isConstant","expr","includes","Interpreter","seed","strict","parser","traceEvents","tables","inferences","claims","lastInput","rng","peg","generate","trace","seedrandom","statement","loadFact","loadInference","facts","query","clause","negative","claimToString","roll","evaluateFunction","values","comparisons","input","parse","tracer","filter","x","event","statements","line","exec","endsWith","rules","load","split","pop","markdown","block","createElement","innerHTML","marked","Array","from","querySelectorAll","forEach","node","textContent","fact","table","col","some","factToString","existingFact","concat","flat","search","b","newFacts","generateRoll","inference","recursive","bindings","aggregate","left","right","binding","evaluateExpression","inf","inferenceToString","undefined","matches","bind","rows","clauses","reduceBindings","group","result","first","rest","slice","reduce","current","key","boundVariable","currBoundVariable","expressionToString","newBinding","assign","comparison","compare","clauseToString","entries","field","fromEntries","l","averageRoll","r","operator","op","target","outcomes","positive_outcomes","count","j","die","modifier","total","Math","floor","fn","function","arg","sumArg","g","curr","probability","loadFromFile","pow","evaluateBinaryOperation","aggregations","searchExpression","variables","array","groups","groupBy","v","JSON","stringify","a","statementToString","stmt","color","queryToString","q","s","chalk","yellow","red","green","c","comparisonToString","mod","claim","Database","interpreter","useState","selectedTableName","setSelectedTableName","style","margin","onChange","table_name","Table","name","row","val","Playground","monaco","useMonaco","languages","setMonarchTokensProvider","defaultToken","keywords","brackets","open","close","token","tokenizer","root","useMonacoEntish","examples","dungeon_world","clear","setInterpreter","setCode","error","setError","log","setLog","editorRef","useRef","Navbar","onClick","tmp","console","newLog","msg","message","example","getModel","setValue","defaultValue","href","marginLeft","height","display","defaultLanguage","minimap","enabled","scrollBeyondLastLine","scrollbar","alwaysConsumeMouseWheel","onMount","editor","layout","justifyContent","overflow","MarkdownRules","ref","setStatements","useEffect","dangerouslySetInnerHTML","__html","sanitize","RuleBlock","useParams","folder","file","setBlock","Rules","useRouteMatch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.33d302d5.chunk.js","sourcesContent":["var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./App-Container.module.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./App-Navbar.module.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\n    monospace;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;AACpC;;AAEA;EACE;aACW;AACb\",\"sourcesContent\":[\"body {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\n    monospace;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","const path = require(\"path\");\nconst fs = require(\"fs\");\nconst REQUIRE_PATH_TEST = /\\.txt$/;\n\n/* eslint-disable no-underscore-dangle */\n\n/**\n * Node will load all matched files as raw strings\n *\n * @param {RegExp} pathMatcher\n */\nfunction register(pathMatcher = REQUIRE_PATH_TEST) {\n  const Module = require(\"module\");\n  const orginalLoad = Module._load;\n  const cwd = process.cwd();\n  Module._load = function (request, _parent) {\n    if (request.match(pathMatcher)) {\n      return fs.readFileSync(path.join(path.dirname(_parent ? _parent.filename : cwd), request), \"utf8\");\n    }\n    return orginalLoad.apply(this, arguments);\n  };\n\n  return () => {\n    Module._load = orginalLoad;\n  };\n}\n\nmodule.exports = {\n  register,\n};\n","export default \"{\\n  const JUNCTION_OPERATOR = {\\n    '&': 'conjunction',\\n    '|': 'disjunction',\\n    '^': 'exclusive_disjunction',\\n  };\\n  const COMPARISON_OPERATORS = [\\\"!=\\\", \\\"<=\\\", \\\">=\\\", \\\"=\\\", \\\"<\\\", \\\">\\\"];\\n  function join(first, rest) {\\n    return rest.reduce(function(left, curr) {\\n      const right = curr[2];\\n      const operator = curr[0];\\n      if (JUNCTION_OPERATOR[operator] !== undefined) {\\n        if ((left.type === 'fact' || left.type === 'comparison') && right.type === JUNCTION_OPERATOR[operator]) {\\n          right.clauses.unshift(left);\\n          return right;\\n        }\\n        return {\\n          type: JUNCTION_OPERATOR[operator],\\n          clauses: [left, right],\\n        };\\n      }\\n      if (COMPARISON_OPERATORS.includes(operator)) {\\n        return {\\n          type: 'comparison',\\n          operator,\\n          left,\\n          right,\\n        };\\n      }\\n      return {\\n        type: 'binary_operation',\\n        operator,\\n        left,\\n        right,\\n      };\\n    }, first);\\n  }\\n  function flatten(arr) {\\n    return arr.reduce((acc, cur) => acc.concat(Array.isArray(cur) ? flatten(cur) : cur), []);\\n  }\\n  function parseNumber(n) {\\n    return parseFloat(flatten(n).filter(d => d).join(''));\\n  }\\n}\\n\\nstatements\\n  = statement+\\n\\nstatement\\n  = comment:comment \\\"\\\\n\\\"? { return comment }\\n  / inference:inference \\\".\\\" { return inference }\\n  / claim:claim \\\".\\\" { return claim }\\n  / fn:function \\\".\\\" { return fn }\\n  / fact:fact \\\".\\\" { return fact }\\n  / roll:rolling \\\".\\\" { return roll}\\n  / query:query \\\".\\\" { return query }\\n  / __ { return null }\\n\\ncomment\\n  = \\\"//\\\" comment:[^\\\\n]* { return { type: 'comment', value: comment.join('').trim() } }\\n  / \\\"/*\\\" comment:(!\\\"*/\\\" .)* \\\"*/\\\" { return { type: 'comment', value: comment.flat().join('').trim() }}\\n\\ninference\\n  = left:fact _ \\\":-\\\" _ right:clause { return { type: 'inference', left, right } }\\n\\nclaim\\n  = \\\"ergo \\\" _ clause:clause { return { type: 'claim', clause: clause } }\\n\\nrolling\\n  = \\\"roll \\\" _ clause:clause { return { type: 'rolling', clause: clause } }\\n\\nquery\\n  = \\\"?\\\" _ query:clause { return { type: 'query', clause: query } }\\n\\nclause\\n  = first:comparison _ rest:(op:(\\\"&\\\" / \\\"|\\\" / \\\"^\\\") _ clause)+ { return join(first, rest) }\\n  / comparison\\n\\ncomparison\\n  = left:additive _ operator:(\\\"!=\\\" / \\\"<=\\\" / \\\">=\\\" / \\\"=\\\" / \\\"<\\\" / \\\">\\\") _ right:additive { return { type: 'comparison', operator, left, right } }\\n  / additive\\n\\nadditive\\n  = first:multiplicative _ rest:(op:(\\\"+\\\" / \\\"-\\\") _ multiplicative)+ { return join(first, rest) }\\n  / multiplicative\\n\\nmultiplicative\\n  = first:primary _ rest:(op:(\\\"*\\\" / \\\"/\\\") _ primary)+ { return join(first, rest) }\\n  / primary\\n\\nprimary\\n  = function\\n  / fact\\n  / string\\n  / variable\\n  / roll\\n  / number\\n  / \\\"(\\\" _ expr:clause _ \\\")\\\" { return expr }\\n\\nfact\\n  = name:([a-z][a-z_]+) \\\"(\\\" _ args:arguments _ \\\")\\\" { return { type: 'fact', table: name[0] + name[1].join(''), fields: args.arguments } }\\n  / \\\"~\\\" fact:fact { return { ...fact, negative: true } }\\n\\nfunction\\n  = fn:builtin_function \\\"(\\\" _ args:arguments _ \\\")\\\" { return { type: 'function', function: fn, arguments: args.arguments } }\\n\\nbuiltin_function\\n  = \\\"Floor\\\"\\n  / \\\"Ceil\\\"\\n  / \\\"Min\\\"\\n  / \\\"Max\\\"\\n  / \\\"Sum\\\"\\n  / \\\"Count\\\"\\n  / \\\"Load\\\"\\n  / \\\"Pr\\\"\\n\\narguments\\n  = first:comparison rest:nextargs* { return { type: 'arguments', arguments: [first].concat(rest) } }\\n\\nnextargs\\n  = _ \\\",\\\" _ expr:comparison { return expr }\\n\\nstring\\n  = quoted_string\\n  / string:([A-Z][A-Za-z_]+) { return { type: 'string', value: string[0] + string[1].join('') } }\\n\\nquoted_string\\n  = \\\"\\\\\\\"\\\" string:([^\\\"]+) \\\"\\\\\\\"\\\" { return { type: 'string', value: string.join('') } }\\n\\nvariable\\n  = name:([a-z_]+) { return { type: 'variable', value: name.join('') } }\\n  / \\\"?\\\" { return { type: 'variable', value: '?' } }\\n\\nroll\\n  = count:([0-9]+) \\\"d\\\" die:([0-9]+) modifier:([+-][0-9]+)? { return { type: 'roll', count: parseInt(count.join('')), die: parseInt(die.join('')), modifier: modifier ? parseInt(modifier.join('')) : 0 } }\\n\\nnumber\\n  = number:([-]?[0-9]+([.][0-9]+)?) { return { type: 'number', value: parseNumber(number) } }\\n\\n_  = [ \\\\t\\\\r\\\\n]*\\n\\n__ = [ \\\\t\\\\r\\\\n]+\\n\";","var map = {\n\t\"./dungeon_world/barbarian.md\": 865,\n\t\"./dungeon_world/characters.md\": 866\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 864;","export default \"# Barbarian\\n\\nThe Barbarian has:\\n\\n- Hit points equal to 8 plus their charisma bonus\\n- A max load of 8 plus their strength bonus\\n- A base damage of 1d10\\n\\n```entish\\nhit_points(character, 8+cha) :- class(character, Barbarian) & bonus(character, Charisma, cha).\\nmax_load(character, 8+str) :- class(character, Barbarian) & bonus(character, Strength, str).\\ndamage(character, 1d10) :- class(character, Barbarian).\\n```\\n\\n```entish\\nergo class(character, Barbarian) & carrying(character, DungeonRations, 5) & wielding(character, Dagger).\\nergo class(character, Barbarian) & wielding(character, Axe) ^ wielding(character, TwoHandedSword).\\nergo class(character, Barbarian) & carrying(character, AdventuringGear) & carrying(character, DungeonRations, 5) ^ wearing(character, Chainmail).\\n```\\n\";","export default \"# Characters\\n\\n## Attributes\\n\\nCharacters have attributes, defining how good they are in 6 core areas:\\n\\n- Strength\\n- Dexterity\\n- Constitution\\n- Intelligence\\n- Wisdom\\n- Charisma\\n\\nYou get up to 73 points to distribution amongst your 6 attributes.\\nEach attribute can be between 5 and 16.\\n\\n```entish\\nergo attribute(character, Strength, str) &\\n\\t   attribute(character, Dexterity, dex) &\\n     attribute(character, Constitution, con) &\\n\\t   attribute(character, Intelligence, int) &\\n\\t   attribute(character, Wisdom, wis) &\\n\\t   attribute(character, Charisma, cha) &\\n\\t   (str+dex+con+int+wis+cha) <= 73 &\\n\\t   str <= 16 & dex <= 16 & con <= 16 & int <= 16 & wis <= 16 & cha <= 16 &\\n\\t   str >= 5 & dex >= 5 & con >= 5 & int >= 5 & wis >= 5 & cha >= 5.\\n```\\n\\n### Attribute bonus\\n\\nA character's bonus is half their attribute score minus ten\\n\\n```entish\\nbonus(character, attr, Floor((score-10)/2)) :- attribute(character, attr, score).\\n```\\n\\n## Gear\\n\\nGear is the stuff your character has. It might be something you can wear, like armor, or something\\nyou can wield, like a sword or an axe. It might also just be something they're carrying, like a\\na backpack or a spellbook.\\n\\n```entish\\ncarrying(character, gear) :- wearing(character, gear) | wielding(character, gear).\\n```\\n\\n### Armor\\n\\nYour armor is the sum of the armor of the gear you're wearing (like Chainmail) or wielding (like a Shield).\\n\\n```entish\\narmor(character, Sum(armor)) :- (wearing(character, gear) | wielding(character, gear)) & armor(gear, armor).\\n```\\n\\n### Load\\n\\nA character's load is the sum of the weights of everying they are carrying.\\n\\n```entish\\nload(character, Sum(weight)) :- carrying(character, gear) & weight(gear, weight).\\n```\\n\\n## Tags\\n\\nA character gets tagged with the tags of any gear they are carrying.\\n\\n```entish\\ntag(character, tag) :- (wearing(character, gear) | wielding(character, gear)) & tag(gear, tag).\\n```\\n\";","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._27KvXhK1Cn3xeSy_ERUuYO { /*!*/ }\\n.iCwJ4OetHHYzpK6q4N79Q {\\n\\ndisplay: flex;\\nflex-direction: column;\\nheight: 100vh;\\nwidth: 100vw;\\n}\\n.iCwJ4OetHHYzpK6q4N79Q select {\\npadding: 5px;\\nfont-size: 0.875rem;\\nborder: 0.0625rem solid #375eab;\\nheight: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAtQ29udGFpbmVyLm1vZHVsZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxJQUFJLEVBQUU7QUFDZDtBQUNBLGNBQWM7O0FBRWQsYUFBYTtBQUNiLHNCQUFzQjtBQUN0QixhQUFhO0FBQ2IsWUFBWTtBQVFaO0FBTkE7QUFDQSxZQUFZO0FBQ1osbUJBQW1CO0FBQ25CLCtCQUErQjtBQUMvQixZQUFZO0FBQ1oiLCJmaWxlIjoic3JjXFxBcHAtQ29udGFpbmVyLm1vZHVsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2xzMSB7IC8qISovIH1cbi5jbHMyIHtcbmNvbXBvc2VzOiBjbHMxO1xuXG5kaXNwbGF5OiBmbGV4O1xuZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbmhlaWdodDogMTAwdmg7XG53aWR0aDogMTAwdnc7XG5cbnNlbGVjdCB7XG5wYWRkaW5nOiA1cHg7XG5mb250LXNpemU6IDAuODc1cmVtO1xuYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgIzM3NWVhYjtcbmhlaWdodDogMzBweDtcbn1cbn0iXX0= */\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/src/App-Container.module.css\",\"webpack://./src/App-Container.module.css\"],\"names\":[],\"mappings\":\"AAAA,2BAAQ,IAAI,EAAE;AACd;;AAGA,aAAa;AACb,sBAAsB;AACtB,aAAa;AACb,YAAY;AAQZ;AANA;AACA,YAAY;AACZ,mBAAmB;AACnB,+BAA+B;AAC/B,YAAY;AACZ;ACCA,gtBAAgtB\",\"sourcesContent\":[\".cls1 { /*!*/ }\\n.cls2 {\\ncomposes: cls1;\\n\\ndisplay: flex;\\nflex-direction: column;\\nheight: 100vh;\\nwidth: 100vw;\\n\\nselect {\\npadding: 5px;\\nfont-size: 0.875rem;\\nborder: 0.0625rem solid #375eab;\\nheight: 30px;\\n}\\n}\",\".cls1 { /*!*/ }\\n.cls2 {\\ncomposes: cls1;\\n\\ndisplay: flex;\\nflex-direction: column;\\nheight: 100vh;\\nwidth: 100vw;\\n}\\n.cls2 select {\\npadding: 5px;\\nfont-size: 0.875rem;\\nborder: 0.0625rem solid #375eab;\\nheight: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAtQ29udGFpbmVyLm1vZHVsZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxJQUFJLEVBQUU7QUFDZDtBQUNBLGNBQWM7O0FBRWQsYUFBYTtBQUNiLHNCQUFzQjtBQUN0QixhQUFhO0FBQ2IsWUFBWTtBQVFaO0FBTkE7QUFDQSxZQUFZO0FBQ1osbUJBQW1CO0FBQ25CLCtCQUErQjtBQUMvQixZQUFZO0FBQ1oiLCJmaWxlIjoic3JjXFxBcHAtQ29udGFpbmVyLm1vZHVsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2xzMSB7IC8qISovIH1cbi5jbHMyIHtcbmNvbXBvc2VzOiBjbHMxO1xuXG5kaXNwbGF5OiBmbGV4O1xuZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbmhlaWdodDogMTAwdmg7XG53aWR0aDogMTAwdnc7XG5cbnNlbGVjdCB7XG5wYWRkaW5nOiA1cHg7XG5mb250LXNpemU6IDAuODc1cmVtO1xuYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgIzM3NWVhYjtcbmhlaWdodDogMzBweDtcbn1cbn0iXX0= */\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"cls1\": \"_27KvXhK1Cn3xeSy_ERUuYO\",\n\t\"cls2\": \"iCwJ4OetHHYzpK6q4N79Q _27KvXhK1Cn3xeSy_ERUuYO\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".WlLYDOQAi_2gHMRjpYz2k { /*!*/ }\\n._2GZvzmSPqaENq77rUojI56 {\\n\\ndisplay: flex;\\nflex-direction: row;\\nalign-items: center;\\npadding: 10px 16px 10px 16px;\\nbackground-color: #e0ebf5;\\n}\\n._2GZvzmSPqaENq77rUojI56 h1 {\\nmargin-right: 16px;\\nfont-size: 20px;\\nfont-family: sans-serif;\\n}\\n._2GZvzmSPqaENq77rUojI56 * {\\nmargin-top: 10px;\\nmargin-bottom: 10px;\\nmargin-right: 12px;\\nborder-radius: 5px;\\nbox-sizing: border-box;\\n}\\n._2GZvzmSPqaENq77rUojI56 button {\\nborder: 1px solid #375eab;\\nfont-size: 16px;\\nfont-family: sans-serif;\\nbackground: #375eab;\\ncolor: white;\\nheight: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAtTmF2YmFyLm1vZHVsZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxJQUFJLEVBQUU7QUFDZDtBQUNBLGNBQWM7O0FBRWQsYUFBYTtBQUNiLG1CQUFtQjtBQUNuQixtQkFBbUI7QUFDbkIsNEJBQTRCO0FBQzVCLHlCQUF5QjtBQXdCekI7QUF0QkE7QUFDQSxrQkFBa0I7QUFDbEIsZUFBZTtBQUNmLHVCQUF1QjtBQUN2QjtBQUVBO0FBQ0EsZ0JBQWdCO0FBQ2hCLG1CQUFtQjtBQUNuQixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLHNCQUFzQjtBQUN0QjtBQUVBO0FBQ0EseUJBQXlCO0FBQ3pCLGVBQWU7QUFDZix1QkFBdUI7QUFDdkIsbUJBQW1CO0FBQ25CLFlBQVk7QUFDWixZQUFZO0FBQ1oiLCJmaWxlIjoic3JjXFxBcHAtTmF2YmFyLm1vZHVsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2xzMSB7IC8qISovIH1cbi5jbHMyIHtcbmNvbXBvc2VzOiBjbHMxO1xuXG5kaXNwbGF5OiBmbGV4O1xuZmxleC1kaXJlY3Rpb246IHJvdztcbmFsaWduLWl0ZW1zOiBjZW50ZXI7XG5wYWRkaW5nOiAxMHB4IDE2cHggMTBweCAxNnB4O1xuYmFja2dyb3VuZC1jb2xvcjogI2UwZWJmNTtcblxuaDEge1xubWFyZ2luLXJpZ2h0OiAxNnB4O1xuZm9udC1zaXplOiAyMHB4O1xuZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG59XG5cbioge1xubWFyZ2luLXRvcDogMTBweDtcbm1hcmdpbi1ib3R0b206IDEwcHg7XG5tYXJnaW4tcmlnaHQ6IDEycHg7XG5ib3JkZXItcmFkaXVzOiA1cHg7XG5ib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5idXR0b24ge1xuYm9yZGVyOiAxcHggc29saWQgIzM3NWVhYjtcbmZvbnQtc2l6ZTogMTZweDtcbmZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuYmFja2dyb3VuZDogIzM3NWVhYjtcbmNvbG9yOiB3aGl0ZTtcbmhlaWdodDogMzBweDtcbn1cbn0iXX0= */\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/src/App-Navbar.module.css\",\"webpack://./src/App-Navbar.module.css\"],\"names\":[],\"mappings\":\"AAAA,yBAAQ,IAAI,EAAE;AACd;;AAGA,aAAa;AACb,mBAAmB;AACnB,mBAAmB;AACnB,4BAA4B;AAC5B,yBAAyB;AAwBzB;AAtBA;AACA,kBAAkB;AAClB,eAAe;AACf,uBAAuB;AACvB;AAEA;AACA,gBAAgB;AAChB,mBAAmB;AACnB,kBAAkB;AAClB,kBAAkB;AAClB,sBAAsB;AACtB;AAEA;AACA,yBAAyB;AACzB,eAAe;AACf,uBAAuB;AACvB,mBAAmB;AACnB,YAAY;AACZ,YAAY;AACZ;ACDA,wxCAAwxC\",\"sourcesContent\":[\".cls1 { /*!*/ }\\n.cls2 {\\ncomposes: cls1;\\n\\ndisplay: flex;\\nflex-direction: row;\\nalign-items: center;\\npadding: 10px 16px 10px 16px;\\nbackground-color: #e0ebf5;\\n\\nh1 {\\nmargin-right: 16px;\\nfont-size: 20px;\\nfont-family: sans-serif;\\n}\\n\\n* {\\nmargin-top: 10px;\\nmargin-bottom: 10px;\\nmargin-right: 12px;\\nborder-radius: 5px;\\nbox-sizing: border-box;\\n}\\n\\nbutton {\\nborder: 1px solid #375eab;\\nfont-size: 16px;\\nfont-family: sans-serif;\\nbackground: #375eab;\\ncolor: white;\\nheight: 30px;\\n}\\n}\",\".cls1 { /*!*/ }\\n.cls2 {\\ncomposes: cls1;\\n\\ndisplay: flex;\\nflex-direction: row;\\nalign-items: center;\\npadding: 10px 16px 10px 16px;\\nbackground-color: #e0ebf5;\\n}\\n.cls2 h1 {\\nmargin-right: 16px;\\nfont-size: 20px;\\nfont-family: sans-serif;\\n}\\n.cls2 * {\\nmargin-top: 10px;\\nmargin-bottom: 10px;\\nmargin-right: 12px;\\nborder-radius: 5px;\\nbox-sizing: border-box;\\n}\\n.cls2 button {\\nborder: 1px solid #375eab;\\nfont-size: 16px;\\nfont-family: sans-serif;\\nbackground: #375eab;\\ncolor: white;\\nheight: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAtTmF2YmFyLm1vZHVsZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxJQUFJLEVBQUU7QUFDZDtBQUNBLGNBQWM7O0FBRWQsYUFBYTtBQUNiLG1CQUFtQjtBQUNuQixtQkFBbUI7QUFDbkIsNEJBQTRCO0FBQzVCLHlCQUF5QjtBQXdCekI7QUF0QkE7QUFDQSxrQkFBa0I7QUFDbEIsZUFBZTtBQUNmLHVCQUF1QjtBQUN2QjtBQUVBO0FBQ0EsZ0JBQWdCO0FBQ2hCLG1CQUFtQjtBQUNuQixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLHNCQUFzQjtBQUN0QjtBQUVBO0FBQ0EseUJBQXlCO0FBQ3pCLGVBQWU7QUFDZix1QkFBdUI7QUFDdkIsbUJBQW1CO0FBQ25CLFlBQVk7QUFDWixZQUFZO0FBQ1oiLCJmaWxlIjoic3JjXFxBcHAtTmF2YmFyLm1vZHVsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2xzMSB7IC8qISovIH1cbi5jbHMyIHtcbmNvbXBvc2VzOiBjbHMxO1xuXG5kaXNwbGF5OiBmbGV4O1xuZmxleC1kaXJlY3Rpb246IHJvdztcbmFsaWduLWl0ZW1zOiBjZW50ZXI7XG5wYWRkaW5nOiAxMHB4IDE2cHggMTBweCAxNnB4O1xuYmFja2dyb3VuZC1jb2xvcjogI2UwZWJmNTtcblxuaDEge1xubWFyZ2luLXJpZ2h0OiAxNnB4O1xuZm9udC1zaXplOiAyMHB4O1xuZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG59XG5cbioge1xubWFyZ2luLXRvcDogMTBweDtcbm1hcmdpbi1ib3R0b206IDEwcHg7XG5tYXJnaW4tcmlnaHQ6IDEycHg7XG5ib3JkZXItcmFkaXVzOiA1cHg7XG5ib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5idXR0b24ge1xuYm9yZGVyOiAxcHggc29saWQgIzM3NWVhYjtcbmZvbnQtc2l6ZTogMTZweDtcbmZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuYmFja2dyb3VuZDogIzM3NWVhYjtcbmNvbG9yOiB3aGl0ZTtcbmhlaWdodDogMzBweDtcbn1cbn0iXX0= */\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"cls1\": \"WlLYDOQAi_2gHMRjpYz2k\",\n\t\"cls2\": \"_2GZvzmSPqaENq77rUojI56 WlLYDOQAi_2gHMRjpYz2k\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import chalk from \"chalk\";\nimport fs from \"fs\";\nimport marked from \"marked\";\nimport peg from \"pegjs\";\nimport seedrandom from \"seedrandom\";\n\nif (typeof document === \"undefined\") {\n  const { JSDOM } = require(\"jsdom\");\n  globalThis.document = new JSDOM().window.document;\n}\n\nrequire(\"./raw-loader.js\").register(/\\.peg$/);\nconst staticGrammar = require(\"./entish.peg\");\nlet grammar: string;\nif (staticGrammar === \"entish.peg\") {\n  // Just so jest can access non-js resources\n  const fs = require(\"fs\");\n  grammar = fs.readFileSync(\"./src/entish.peg\").toString();\n} else {\n  grammar = staticGrammar.default;\n}\n\nexport type Statement = Comment | Fact | Inference | Claim | Rolling | Query | Function;\n\nexport type Comment = {\n  type: \"comment\";\n  value: string;\n};\n\nexport type Fact = {\n  type: \"fact\";\n  table: string;\n  fields: Expression[];\n  negative?: boolean;\n  matches?: Fact[];\n};\n\nexport type Inference = {\n  type: \"inference\";\n  left: Fact;\n  right: Conjunction | Disjunction;\n};\n\nexport type Clause = Fact | Function | Conjunction | Disjunction | ExclusiveDisjunction | Comparison;\n\nexport type Conjunction = {\n  type: \"conjunction\";\n  clauses: Clause[];\n};\n\nexport type Disjunction = {\n  type: \"disjunction\";\n  clauses: Clause[];\n};\n\nexport type ExclusiveDisjunction = {\n  type: \"exclusive_disjunction\";\n  clauses: Clause[];\n};\n\nexport type Comparison = {\n  type: \"comparison\";\n  operator: ComparisonOperator;\n  left: Expression;\n  right: Expression;\n};\n\nexport type ComparisonOperator = \"=\" | \">\" | \"<\" | \">=\" | \"<=\" | \"!=\";\n\nexport type Claim = {\n  type: \"claim\";\n  clause: Clause;\n};\n\nexport type Rolling = {\n  type: \"rolling\";\n  clause: Clause;\n};\n\nexport type Query = {\n  type: \"query\";\n  clause: Clause;\n};\n\nexport type Expression = Constant | Function | BinaryOperation | Variable | Comparison;\n\nexport type Constant = Boolean | String | Number | Roll;\n\nexport type BinaryOperation = {\n  type: \"binary_operation\";\n  operator: \"+\" | \"-\" | \"*\" | \"/\" | \"^\";\n  left: Expression;\n  right: Expression;\n};\n\nexport type Function = {\n  type: \"function\";\n  function: \"Floor\" | \"Ceil\" | \"Min\" | \"Max\" | \"Sum\" | \"Count\" | \"Load\" | \"Pr\";\n  arguments: Expression[];\n};\n\nexport type Boolean = {\n  type: \"boolean\";\n  value: boolean;\n};\n\nexport type String = {\n  type: \"string\";\n  value: string;\n};\n\nexport type Variable = {\n  type: \"variable\";\n  value: string;\n};\n\nexport type Number = {\n  type: \"number\";\n  value: number;\n};\n\nexport type Roll = {\n  type: \"roll\";\n  count: number;\n  die: number;\n  modifier: number;\n};\n\nexport type Binding = {\n  facts: Fact[];\n  values: { [key: string]: Constant | undefined };\n  comparisons: Comparison[];\n  group?: Binding[];\n};\n\nexport class Entception extends Error {}\n\nexport class BindingMismatch extends Error {\n  type: string = \"BindingMismatch\";\n}\n\nexport class TODO extends Error {}\n\nfunction groupBy<T>(array: T[], f: (o: T) => string) {\n  const groups: { [key: string]: T[] } = {};\n  array.forEach((o) => {\n    const group = f(o);\n    groups[group] = groups[group] || [];\n    groups[group].push(o);\n  });\n  return Object.keys(groups).map((group) => groups[group]);\n}\n\nfunction equal(expr1: Expression | Fact, expr2: Expression | Fact): boolean {\n  if (expr1.type !== expr2.type) return false;\n  if (expr1.type === \"fact\" && expr2.type === \"fact\") {\n    if (expr1.fields.length !== expr2.fields.length) return false;\n    return expr1.fields.every((f, i) => equal(f, expr2.fields[i]));\n  }\n  if (expr1.type === \"roll\" && expr2.type === \"roll\") return rollToString(expr1) === rollToString(expr2);\n  if (\"value\" in expr1 && \"value\" in expr2) return expr1.value === expr2.value;\n  throw new Entception(`incomparable types: ${expr1.type} and ${expr2.type}`);\n}\n\nfunction isConstant(expr: Expression): expr is Constant {\n  return [\"string\", \"number\", \"boolean\", \"roll\"].includes(expr.type);\n}\n\ntype TraceEvent = {\n  type: string;\n  rule: string;\n  location: {\n    start: {\n      offset: number;\n      line: number;\n      column: number;\n    };\n    end: {\n      offset: number;\n      line: number;\n      column: number;\n    };\n  };\n};\n\nexport default class Interpreter {\n  strict: boolean;\n  parser: PEG.Parser;\n  traceEvents: TraceEvent[] = [];\n  tables: { [key: string]: Fact[] } = {};\n  inferences: Inference[] = [];\n  claims: Claim[] = [];\n  lastInput?: string;\n  rng: () => number;\n\n  constructor(seed: string, strict: boolean = true) {\n    this.strict = strict;\n    this.parser = peg.generate(grammar, { trace: true });\n    this.rng = seedrandom(seed);\n  }\n\n  exec(statement: Statement): Fact[] | Constant {\n    switch (statement.type) {\n      case \"comment\":\n        return [];\n      case \"fact\":\n        return this.loadFact(statement);\n      case \"inference\":\n        return this.loadInference(statement);\n      case \"claim\":\n        this.claims.push(statement);\n        const facts = this.query(statement.clause);\n        const negative = !!(statement.clause.type === \"fact\" && statement.clause.negative);\n        if (negative !== (facts.length === 0)) {\n          if (this.strict) {\n            throw new Entception(`unable to verify ${claimToString(statement)}`);\n          }\n          return {\n            type: \"boolean\",\n            value: false,\n          };\n        }\n        return facts;\n      case \"query\":\n        return this.query(statement.clause);\n      case \"rolling\":\n        return this.roll(statement);\n      case \"function\":\n        return this.evaluateFunction(statement, { facts: [], values: {}, comparisons: [] });\n      default:\n        throw new TODO(`unhandled statement type: ${(statement as any).type}`);\n    }\n  }\n\n  parse(input: string): Statement[] {\n    try {\n      return this.parser.parse(input, { tracer: this }).filter((x: any) => x);\n    } finally {\n      this.traceEvents = [];\n    }\n  }\n\n  trace(event: TraceEvent) {\n    this.traceEvents.push(event);\n  }\n\n  load(input: string) {\n    this.lastInput = input;\n    const statements = this.parse(input);\n    for (let line in statements) {\n      const statement = statements[line];\n      this.exec(statement);\n    }\n  }\n\n  loadFromFile(filename: string) {\n    if (filename.endsWith(\".ent\")) {\n      const rules = fs.readFileSync(filename).toString();\n      this.load(rules);\n    } else if (filename.endsWith(\".md\")) {\n      const markdown = fs.readFileSync(filename).toString();\n      const block = document.createElement(\"div\");\n      block.innerHTML = marked(markdown);\n      Array.from(block.querySelectorAll(\"code.language-entish\")).forEach((node) => {\n        if (node.textContent) this.load(node.textContent);\n      });\n    } else {\n      throw new Entception(`unknown file type ${filename.split(\".\").pop()}`);\n    }\n  }\n\n  loadFact(fact: Fact): Fact[] {\n    if (fact.negative) {\n      this.tables[fact.table] = this.tables[fact.table].filter(\n        (fact) => !fact.fields.every((col, i) => equal(fact.fields[i], col))\n      );\n      return [fact];\n    }\n    if (!this.tables[fact.table]) {\n      this.tables[fact.table] = [];\n    }\n    if (fact.fields.some((expr) => !isConstant(expr))) {\n      throw new Entception(`facts must be grounded with strings or numbers: ${factToString(fact)}`);\n    }\n    if (!this.tables[fact.table].some((existingFact) => equal(existingFact, fact))) {\n      this.tables[fact.table].push(fact);\n      return [fact].concat(this.inferences.map((i) => this.loadInference(i, true)).flat());\n    }\n    return [fact];\n  }\n\n  query(clause: Clause): Fact[] {\n    return this.search(clause)\n      .map((b) => b.facts)\n      .flat();\n  }\n\n  roll(roll: Rolling): Fact[] {\n    const newFacts: Fact[] = this.search(roll.clause)\n      .map((b) => b.facts)\n      .flat()\n      .map((fact) => {\n        return {\n          type: \"fact\",\n          table: fact.table,\n          fields: fact.fields.map((f) => (f.type === \"roll\" ? this.generateRoll(f) : f)),\n        };\n      });\n    newFacts.forEach((fact) => this.loadFact(fact));\n    return newFacts;\n  }\n\n  loadInference(inference: Inference, recursive: boolean = false): Fact[] {\n    const bindings = this.aggregate(inference.left, this.search(inference.right));\n    const facts: Fact[] = bindings.map((binding) => {\n      return {\n        type: \"fact\",\n        table: inference.left.table,\n        negative: inference.left.negative,\n        fields: inference.left.fields.map((f) => this.evaluateExpression(f, binding)),\n      };\n    });\n    facts.concat(facts.map((f) => this.loadFact(f)).flat());\n    if (!recursive && !this.inferences.some((inf) => inferenceToString(inf) === inferenceToString(inference))) {\n      this.inferences.push(inference);\n    }\n    return facts;\n  }\n\n  search(clause: Clause): Binding[] {\n    if (clause.type === \"fact\" && clause.matches === undefined) {\n      clause.matches = [];\n    }\n    switch (clause.type) {\n      case \"fact\":\n        // facts return one binding per matching row of the table\n        return (this.tables[clause.table] || [])\n          .map((fact) => this.bind(fact, clause))\n          .filter((b) => b !== undefined) as Binding[];\n      case \"conjunction\":\n        // conjunction joins bindings into a single binding\n        let rows: Binding[][] = [];\n        this.join(\n          clause.clauses.map((clause) => this.search(clause)),\n          [],\n          rows\n        );\n        return rows.map((bindings) => this.reduceBindings(bindings)).filter((b) => b !== undefined) as Binding[];\n      case \"disjunction\":\n        // disjunction concatenates bindings\n        return clause.clauses.map((clause) => this.search(clause)).flat();\n      case \"exclusive_disjunction\":\n        const matches = clause.clauses\n          .map((clause) => this.search(clause))\n          .flat()\n          .filter((b) => b.facts.length > 0);\n        if (matches.length === 1) {\n          return matches;\n        }\n        return [];\n      case \"comparison\":\n        return [\n          {\n            facts: [] as Fact[],\n            values: {},\n            comparisons: [clause],\n          },\n        ];\n      case \"function\":\n        throw new TODO(\"can't handle function as clause\");\n    }\n  }\n\n  join(bindings: Binding[][], group: Binding[], result: Binding[][]) {\n    if (bindings.length === 0) {\n      result.push(group);\n      return;\n    }\n    const first = bindings[0];\n    const rest = bindings.slice(1);\n    for (let binding of first) {\n      this.join(rest, group.concat([binding]), result);\n    }\n  }\n\n  // reduce joins bindings together where same-named variables match\n  // it discards non-matching bindings (i.e. bindings that \"disagree on the facts\")\n  reduceBindings(bindings: Binding[]): Binding | undefined {\n    try {\n      return bindings.reduce(\n        (current, binding) => {\n          Object.keys(current.values).forEach((key) => {\n            const boundVariable = binding.values[key];\n            const currBoundVariable = current.values[key];\n            if (boundVariable === undefined || currBoundVariable === undefined) return;\n            if (!equal(boundVariable, currBoundVariable)) {\n              throw new BindingMismatch(\n                `bindings disagree: ${expressionToString(boundVariable)} != ${expressionToString(currBoundVariable)}`\n              );\n            }\n          });\n          const newBinding = {\n            facts: current.facts.concat(binding.facts),\n            values: Object.assign(current.values, binding.values),\n            comparisons: binding.comparisons,\n          };\n          binding.comparisons.forEach((comparison) => {\n            if (!this.compare(comparison, newBinding)) {\n              throw new BindingMismatch(`false comparison: ${clauseToString(comparison)}, ${newBinding.values}`);\n            }\n          });\n          return newBinding;\n        },\n        {\n          facts: [],\n          values: {},\n          comparisons: [],\n        } as Binding\n      );\n    } catch (e: any) {\n      if (e.type === \"BindingMismatch\") return undefined;\n      throw e;\n    }\n  }\n\n  bind(fact: Fact, clause: Fact): Binding | undefined {\n    const entries: [string, Constant][] = [];\n    for (let i = 0; i < fact.fields.length; i++) {\n      const value = fact.fields[i];\n      if (!isConstant(value)) {\n        throw new Entception(`can't bind non-constant field of type ${value.type} in ${factToString(fact)}`);\n      }\n      if (i >= clause.fields.length) break;\n      const field = clause.fields[i];\n      if (field.type === \"variable\" && field.value !== \"?\") {\n        entries.push([field.value, value]);\n      } else if (\n        (field.type === \"string\" || field.type === \"number\" || field.type === \"roll\") &&\n        !equal(value, field)\n      ) {\n        return undefined;\n      }\n    }\n    if (clause.matches === undefined) {\n      clause.matches = [];\n    }\n    clause.matches.push(fact);\n    const bindings = Object.fromEntries(entries);\n    return {\n      facts: [fact],\n      values: bindings,\n      comparisons: [],\n    };\n  }\n\n  compare(comparison: Comparison, binding: Binding): boolean {\n    const left = this.evaluateExpression(comparison.left, binding);\n    const right = this.evaluateExpression(comparison.right, binding);\n    const l = left.type === \"roll\" ? this.averageRoll(left) : left.value;\n    const r = right.type === \"roll\" ? this.averageRoll(right) : right.value;\n    switch (comparison.operator) {\n      case \"=\":\n        return l === r;\n      case \"!=\":\n        return l !== r;\n      case \">\":\n        return l > r;\n      case \">=\":\n        return l >= r;\n      case \"<\":\n        return l < r;\n      case \"<=\":\n        return l <= r;\n    }\n  }\n\n  probability(roll: Roll, op: ComparisonOperator, target: number): number {\n    let outcomes = 0;\n    let positive_outcomes = 0;\n    for (let i = 0; i < roll.count; i++) {\n      for (let j = 1; j <= roll.die; j++) {\n        const r = j + roll.modifier;\n        outcomes++;\n        switch (op) {\n          case \"=\":\n            if (r === target) positive_outcomes++;\n            break;\n          case \"!=\":\n            if (r !== target) positive_outcomes++;\n            break;\n          case \">=\":\n            if (r >= target) positive_outcomes++;\n            break;\n          case \"<=\":\n            if (r <= target) positive_outcomes++;\n            break;\n          case \">\":\n            if (r > target) positive_outcomes++;\n            break;\n          case \"<\":\n            if (r < target) positive_outcomes++;\n            break;\n        }\n      }\n    }\n    return positive_outcomes / outcomes;\n  }\n\n  averageRoll(roll: Roll): number {\n    let total = 0;\n    for (let i = 0; i < roll.count; i++) {\n      total += Math.floor(0.5 * roll.die) + 1 + roll.modifier;\n    }\n    return total;\n  }\n\n  generateRoll(roll: Roll): Number {\n    let total = 0;\n    for (let i = 0; i < roll.count; i++) {\n      total += Math.floor(this.rng() * roll.die) + 1 + roll.modifier;\n    }\n    return {\n      type: \"number\",\n      value: total,\n    };\n  }\n\n  evaluateFunction(fn: Function, binding: Binding): Constant {\n    switch (fn.function) {\n      case \"Floor\":\n        const arg = this.evaluateExpression(fn.arguments[0], binding);\n        if (arg.type !== \"number\") {\n          throw new Entception(`floor requires numeric argument, got ${arg.type}`);\n        }\n        return { type: \"number\", value: Math.floor(arg.value) };\n      case \"Sum\":\n        if (binding.group === undefined) {\n          return {\n            type: \"number\",\n            value: 0,\n          };\n        }\n        const sumArg = fn.arguments[0];\n        if (sumArg.type !== \"variable\") {\n          throw new Entception(`sum function requires a single variable argument, got ${sumArg.type}`);\n        }\n        return {\n          type: \"number\",\n          value: binding.group\n            .map((g) => g.values[sumArg.value])\n            .reduce((total, curr) => {\n              if (curr === undefined) return total;\n              if (curr.type === \"roll\") return total;\n              if (curr.type !== \"number\")\n                throw new Entception(`sum got a non-numerical argument, ${sumArg.value} = ${curr.type}`);\n              return total + curr.value;\n            }, 0),\n        };\n      case \"Pr\":\n        if (fn.arguments[0].type === \"comparison\") {\n          const roll = this.evaluateExpression(fn.arguments[0].left, binding);\n          const operator = fn.arguments[0].operator;\n          const target = this.evaluateExpression(fn.arguments[0].right, binding);\n          if (roll.type !== \"roll\" || target.type !== \"number\") {\n            throw new Entception(`can't compute probability for ${expressionToString(fn.arguments[0])}`);\n          }\n          return {\n            type: \"number\",\n            value: this.probability(roll, operator, target.value),\n          };\n        } else {\n          const roll = this.evaluateExpression(fn.arguments[0], binding);\n          if (roll.type !== \"roll\") throw new Entception(`first argument to probability function must be a roll`);\n          return roll;\n        }\n      case \"Load\":\n        if (fn.arguments[0].type !== \"string\") {\n          throw new Entception(`expected load(<filename:string)>, got ${fn.arguments[0].type}`);\n        }\n        this.loadFromFile(fn.arguments[0].value);\n        return {\n          type: \"boolean\",\n          value: true,\n        };\n      case \"Count\":\n      default:\n        throw new TODO(`can't handle function ${fn.function}`);\n    }\n  }\n\n  evaluateBinaryOperation(op: BinaryOperation, binding: Binding): number {\n    const left = this.evaluateExpression(op.left, binding);\n    if (left.type !== \"number\") {\n      throw new Entception(`binary operation requires number on left-hand side, got ${left.type}`);\n    }\n    const right = this.evaluateExpression(op.right, binding);\n    if (right.type !== \"number\") {\n      throw new Entception(`binary operation requires number on right-hand side, got ${right.type}`);\n    }\n    switch (op.operator) {\n      case \"+\":\n        return left.value + right.value;\n      case \"-\":\n        return left.value - right.value;\n      case \"/\":\n        return left.value / right.value;\n      case \"*\":\n        return left.value * right.value;\n      case \"^\":\n        return Math.pow(left.value, right.value);\n    }\n  }\n\n  evaluateExpression(expr: Expression, binding: Binding): Constant {\n    switch (expr.type) {\n      case \"binary_operation\":\n        return {\n          type: \"number\",\n          value: this.evaluateBinaryOperation(expr, binding),\n        };\n      case \"function\":\n        return this.evaluateFunction(expr, binding);\n      case \"variable\":\n        const boundVariable = binding.values[expr.value];\n        if (boundVariable === undefined) {\n          throw new Entception(`variable ${expr.value} missing from binding`);\n        }\n        return boundVariable;\n      case \"comparison\":\n        return { type: \"boolean\", value: this.compare(expr, binding) };\n      case \"boolean\":\n      case \"string\":\n      case \"number\":\n      case \"roll\":\n        return expr;\n      default:\n        throw new Entception(`unhandled expression type ${(expr as any).type}: ${expressionToString(expr)}`);\n    }\n  }\n\n  aggregate(fact: Fact, bindings: Binding[]): Binding[] {\n    const aggregations = fact.fields\n      .map((e) =>\n        this.searchExpression(e, (e) => {\n          if (e.type === \"function\" && e.function === \"Sum\") return e;\n          return undefined;\n        })\n      )\n      .flat()\n      .filter((e) => e !== undefined) as Function[];\n    const variables = fact.fields\n      .map((e) =>\n        this.searchExpression(e, (e) => {\n          if (e.type === \"function\" && e.function === \"Sum\") return false;\n          if (e.type === \"variable\") return e;\n          return undefined;\n        })\n      )\n      .flat()\n      .filter((e) => e !== undefined) as Variable[];\n    if (aggregations.length === 0) {\n      return bindings;\n    }\n    const groups = groupBy(bindings, (b) => {\n      const group = Object.fromEntries(variables.map((v) => [v.value, b.values[v.value]]));\n      return JSON.stringify(group);\n    });\n    return groups.map((g) => {\n      return {\n        facts: g.map((b) => b.facts).flat(),\n        values: g[0].values,\n        comparisons: g.map((b) => b.comparisons).flat(),\n        group: g,\n      };\n    });\n  }\n\n  searchExpression<T>(expr: Expression, fn: (expr: Expression) => T | undefined | false): T[] {\n    const result = fn(expr);\n    if (result === false) return [];\n    const a = result === undefined ? [] : [result];\n    switch (expr.type) {\n      case \"boolean\":\n      case \"number\":\n      case \"roll\":\n      case \"variable\":\n      case \"string\":\n        return a;\n      case \"comparison\":\n        return a.concat(this.searchExpression(expr.left, fn).concat(this.searchExpression(expr.right, fn)));\n      case \"binary_operation\":\n        return a.concat(this.searchExpression(expr.left, fn).concat(this.searchExpression(expr.right, fn)));\n      case \"function\":\n        return a.concat(expr.arguments.map((e) => this.searchExpression(e, fn)).flat());\n    }\n  }\n}\n\nexport function statementToString(stmt: Statement, color: boolean = false): string {\n  switch (stmt.type) {\n    case \"claim\":\n      return claimToString(stmt, color);\n    case \"inference\":\n      return inferenceToString(stmt, color);\n    case \"query\":\n      return queryToString(stmt, color);\n    case \"comment\":\n      return `// ${stmt.value}`;\n    default:\n      return JSON.stringify(stmt, null, 2);\n  }\n}\n\nexport function inferenceToString(inf: Inference, color: boolean = false): string {\n  return `${factToString(inf.left, color)} :- ${clauseToString(inf.right, color)}.`;\n}\n\nexport function queryToString(q: Query, color: boolean = false): string {\n  return `? ${clauseToString(q.clause, color)}`;\n}\n\nexport function factToString(fact: Fact, color: boolean = false): string {\n  const s = `${fact.negative ? \"~\" : \"\"}${fact.table}(${fact.fields.map((e) => expressionToString(e)).join(\", \")})`;\n  if (color) {\n    if (fact.matches === undefined) {\n      return chalk.yellow(s);\n    } else if (fact.matches.length === 0) {\n      return chalk.red(s);\n    } else {\n      return chalk.green(s);\n    }\n  }\n  return s;\n}\n\nexport function clauseToString(clause: Clause, color: boolean = false): string {\n  switch (clause.type) {\n    case \"fact\":\n      return factToString(clause, color);\n    case \"conjunction\":\n      return \"(\" + clause.clauses.map((c) => clauseToString(c, color)).join(\" & \") + \")\";\n    case \"disjunction\":\n      return \"(\" + clause.clauses.map((c) => clauseToString(c, color)).join(\" | \") + \")\";\n    case \"exclusive_disjunction\":\n      return \"(\" + clause.clauses.map((c) => clauseToString(c, color)).join(\" ⊕ \") + \")\";\n    case \"comparison\":\n      return comparisonToString(clause, color);\n    default:\n      return JSON.stringify(clause, null, 2);\n  }\n}\n\nexport function expressionToString(expr: Expression): string {\n  switch (expr.type) {\n    case \"boolean\":\n      return expr.value.toString();\n    case \"string\":\n      return expr.value;\n    case \"number\":\n      return expr.value.toString();\n    case \"roll\":\n      return rollToString(expr);\n    case \"variable\":\n      return expr.value;\n    case \"binary_operation\":\n      return `${expressionToString(expr.left)} ${expr.operator} ${expressionToString(expr.right)}`;\n    case \"function\":\n      return `${expr.function} (${expr.arguments.map((e) => expressionToString(e)).join(\", \")})`;\n    case \"comparison\":\n      return comparisonToString(expr);\n    default:\n      return JSON.stringify(expr, null, 2);\n  }\n}\n\nexport function comparisonToString(comparison: Comparison, color: boolean = false): string {\n  return `${expressionToString(comparison.left)} ${comparison.operator} ${expressionToString(comparison.right)}`;\n}\n\nexport function rollToString(roll: Roll): string {\n  const mod = roll.modifier > 0 ? `+${roll.modifier}` : roll.modifier < 0 ? `-${roll.modifier}` : \"\";\n  return `${roll.count}d${roll.die}${mod}`;\n}\n\nexport function claimToString(claim: Claim, color: boolean = false): string {\n  return `ergo ${clauseToString(claim.clause, color)}`;\n}\n\nexport function rollingToString(roll: Rolling): string {\n  return `roll ${clauseToString(roll.clause)}`;\n}\n","export default \"// We'll start defining our character, Auric\\ncharacter(Auric).\\n\\n// Auric has the Barbarian class\\nclass(Auric, Barbarian).\\n\\n// Auric has a Strength of 16\\nattribute(Auric, Strength, 16).\\n\\n// Auric has a Wisdom of 16\\nattribute(Auric, Wisdom, 9).\\n\\n// A character's bonus is half their attribute score minus ten\\nbonus(character, attr, Floor((score-10)/2)) :- attribute(character, attr, score).\\n\\n// Therefore, Auric has a Strength bonus of 3\\nergo bonus(Auric, Strength, 3).\\n\\n// Therefore, Auric has a Wisdom bonus of -1\\nergo bonus(Auric, Wisdom, -1).\\n\\n// Full Plate has an armor bonus of 3\\narmor(FullPlate, 3).\\n\\n// Full Plate has a weight of 4\\nweight(FullPlate, 4).\\n\\n// Full Plate has the clumsy tag\\ntag(FullPlate, Clumsy).\\n\\n// A small shield\\nweight(RoundShield, 1).\\narmor(RoundShield, 1).\\n\\n// And a sword\\nweight(TwoHandedSword, 2).\\ndamage(TwoHandedSword, 1d8).\\ntag(TwoHandedSword, Close).\\n\\n// Given gear has a tag and the character is wearing the gear, add the tag to the character\\ntag(character, tag) :- (wearing(character, gear) | wielding(character, gear)) & tag(gear, tag).\\n\\n// Given a character, their armor is the sum of the armor of gear they are wearing/wielding\\narmor(character, Sum(armor)) :- (wearing(character, gear) | wielding(character, gear)) & armor(gear, armor).\\n\\n// Given a character, their load is the sum of the weights of gear they are wearing and wielding\\nload(character, Sum(weight)) :- (wearing(character, gear) | wielding(character, gear)) & weight(gear, weight).\\n\\n// The max load of a Barbarian is 8 plus their strength bonus\\nmax_load(character, 8+str) :- class(character, Barbarian) & bonus(character, Strength, str).\\n\\n// Give Auric his gear\\nwearing(Auric, FullPlate).\\nwielding(Auric, RoundShield).\\nwielding(Auric, TwoHandedSword).\\n\\n// So Auric is Clumsy, but he's got 4 armor a load of 7, and a max load of 11\\nergo tag(Auric, Clumsy).\\nergo armor(Auric, 4).\\nergo load(Auric, 7).\\nergo max_load(Auric, 11).\\n\\n? wielding(Auric, ?) | wearing(Auric, ?).\\n\\n// The move \\\"Full Plate and Packing Steel\\\" negates the Clumsy tag\\n~tag(character, Clumsy) :- move(character, FullPlateAndPackingSteel).\\n\\n// Auric has the move \\\"Full Plate and Packing Steel\\\"\\nmove(Auric, FullPlateAndPackingSteel).\\n\\n// Auric is not Clumsy\\nergo ~tag(Auric, Clumsy).\\n\\n// Rolls and probability - work in progress\\nattack(Barbarian, 1d20+2).\\n\\nergo attack(Barbarian, roll) & Pr(roll >= 15) = 0.4.\\n\\nenemy(Orc).\\narmor(Orc, 10).\\n\\nhit(character, weapon, enemy) :- class(character, class) & attack(class, roll) & wielding(character, weapon) & damage(weapon, ?) & enemy(enemy) & armor(enemy, armor) & roll >= armor.\\n\\nergo attack(Barbarian, ?) & enemy(Orc).\\n\\nergo hit(Auric, TwoHandedSword, Orc).\\n\\nroll damage(TwoHandedSword, ?).\\n\\nergo damage(TwoHandedSword, ?).\\n\\nmax_health(Orc, 10).\\n\\nhealth(character, max_health - Sum(damage)) :- max_health(character, max_health) & hit(?, weapon, character) & damage(weapon, damage).\\n\\nergo health(Orc, ?).\\n\";","import React, { useRef, useState } from \"react\";\nimport Editor from \"@monaco-editor/react\";\n\nimport Interpreter, { Fact, expressionToString } from \"./entmoot\";\nimport useMonacoEntish from \"./useMonacoEntish\";\nimport dungeon_world from \"./dungeon_world.ent\";\nimport { Navbar } from \"./App\";\n\nfunction Database({ interpreter }: { interpreter: Interpreter }) {\n  const [selectedTableName, setSelectedTableName] = useState<string | undefined>(undefined);\n  return (\n    <div style={{ margin: \"16px 24px\" }}>\n      {Object.keys(interpreter.tables).length > 0 && (\n        <select\n          onChange={(event) => {\n            setSelectedTableName(event.target.value);\n          }}\n        >\n          {Object.keys(interpreter.tables).map((table_name) => (\n            <option key={table_name} value={table_name}>\n              {table_name}\n            </option>\n          ))}\n        </select>\n      )}\n      {selectedTableName && <Table name={selectedTableName} rows={interpreter.tables[selectedTableName]} />}\n    </div>\n  );\n}\n\nfunction Table({ name, rows }: { name: string; rows: Fact[] }) {\n  return (\n    <table>\n      <tbody>\n        {rows.map((row, i) => (\n          <tr key={`${name}-${i}`}>\n            {row.fields.map((val, j) => (\n              <td key={`${name}-${i}-${j}`}>{expressionToString(val)}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default function Playground() {\n  useMonacoEntish();\n  const examples: { [key: string]: string } = {\n    dungeon_world: dungeon_world,\n    clear: \"\",\n  };\n  const [interpreter, setInterpreter] = useState<Interpreter>(new Interpreter(\"seed\"));\n  const [code, setCode] = useState<string>(examples.dungeon_world);\n  const [error, setError] = useState<string | undefined>(undefined);\n  const [log, setLog] = useState<string[]>([]);\n  const editorRef = useRef<any>(null);\n  const onExampleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const example = examples[event.target.value];\n    setCode(example);\n    editorRef.current?.getModel().setValue(example);\n    setInterpreter(new Interpreter(\"seed\"));\n  };\n  const run = () => {\n    const tmp = (console as any).log;\n    const newLog: string[] = [];\n    (console as any).log = (msg: string) => {\n      newLog.push(msg);\n    };\n    try {\n      interpreter.load(code);\n      setError(undefined);\n    } catch (e: any) {\n      setError(e.message);\n    }\n    (console as any).log = tmp;\n    setLog(newLog);\n    setInterpreter(interpreter);\n  };\n  return (\n    <>\n      <Navbar>\n        <h1>Entish Playground</h1>\n        <button onClick={run}>Run</button>\n        <select onChange={onExampleChange} defaultValue={\"dungeon_world\"}>\n          <option value=\"clear\">Clear</option>\n          <option value=\"dungeon_world\">Dungeon World</option>\n        </select>\n        <a href=\"//github.com/etherealmachine/entish#readme\">README</a>\n        <div style={{ marginLeft: \"auto\" }}>\n          <span>\n            <a href=\"//github.com/etherealmachine\">James Pettit</a> ©2021\n          </span>\n        </div>\n      </Navbar>\n      <div style={{ height: \"calc(100vh - 70px)\" }}>\n        <div style={{ height: \"60%\", display: \"flex\" }}>\n          <Editor\n            defaultLanguage=\"entish\"\n            defaultValue={code}\n            onChange={(value) => {\n              if (value) setCode(value);\n            }}\n            options={{\n              minimap: { enabled: false },\n              scrollBeyondLastLine: false,\n              scrollbar: { alwaysConsumeMouseWheel: false },\n            }}\n            onMount={(editor) => {\n              editorRef.current = editor;\n              editor.layout();\n            }}\n          />\n        </div>\n        <div\n          style={{\n            height: \"40%\",\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n          }}\n        >\n          <div style={{ height: \"100%\", overflow: \"scroll\" }}>\n            <p style={{ color: \"#900\" }}>{error}</p>\n            <div>\n              {log.map((msg, i) => (\n                <p key={`log-msg-${i}`}>{msg}</p>\n              ))}\n            </div>\n          </div>\n          <Database interpreter={interpreter} />\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useMonaco } from \"@monaco-editor/react\";\n\nexport default function useMonacoEntish() {\n  const monaco = useMonaco();\n  if (monaco) {\n    monaco.languages.register({ id: \"entish\" });\n\n    // Register a tokens provider for the language\n    monaco.languages.setMonarchTokensProvider(\"entish\", {\n      defaultToken: \"invalid\",\n      keywords: [],\n      brackets: [{ open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }],\n      tokenizer: {\n        root: [\n          [/∴|:-|\\.|^\\?/, \"keyword\"],\n          [/\\/\\/.*$/, \"comment\"],\n          [/[A-Z][a-z]*/, \"constant\"],\n          [/[0-9]+d[0-9]+([+-][0-9]+)?/, \"constant\"],\n          [/\\d+/, \"number\"],\n          [/[()]/, \"@brackets\"],\n          [/([a-z_]+)\\(/, \"identifier\"],\n          [/[a-z_]+|\\?/, \"variable.name\"],\n          [/[,]/, \"delimiter\"],\n          [/~|=|>|<|!=|>=|<=|\\*|\\/|\\+|-|\\^|&|\\|/, \"operators\"],\n          [/[ \\t\\r\\n]+/, \"\"],\n        ],\n      },\n    });\n  }\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport { sanitize } from \"dompurify\";\nimport marked from \"marked\";\n\nimport Interpreter, { Statement, statementToString } from \"./entmoot\";\n\nexport default function MarkdownRules({ interpreter, rules }: { interpreter: Interpreter; rules: string }) {\n  const ref = useRef<HTMLDivElement>(null);\n  const [statements, setStatements] = useState<Statement[]>();\n  useEffect(() => {\n    if (ref.current) {\n      setStatements(\n        Array.from(ref.current.querySelectorAll(\"code.language-entish\"))\n          .map((node) => (node.textContent ? interpreter.parse(node.textContent) : []))\n          .flat()\n      );\n    }\n  }, [interpreter]);\n  return (\n    <div>\n      <div ref={ref} dangerouslySetInnerHTML={{ __html: sanitize(marked(rules)) }} />\n      {statements && statements.map((stmt, i) => <div key={`statement-${i}`}>{statementToString(stmt)}</div>)}\n    </div>\n  );\n}\n","import Editor from \"@monaco-editor/react\";\nimport { useRef, useState } from \"react\";\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router\";\n\nimport { Navbar } from \"./App\";\nimport Interpreter from \"./entmoot\";\nimport MarkdownRules from \"./MarkdownRules\";\n\nconst RuleBlock = () => {\n  const { folder, file } = useParams<{ folder: string; file: string }>();\n  const module = require(`./rules/${folder}/${file}`);\n  const [block, setBlock] = useState<string>(module.default);\n  const interpreter = new Interpreter(\"seed\");\n  const editorRef = useRef<any>(null);\n  return (\n    <div style={{ height: \"calc(100vh - 70px)\" }}>\n      <div style={{ height: \"50%\", display: \"flex\" }}>\n        <Editor\n          defaultLanguage=\"markdown\"\n          defaultValue={module.default}\n          onChange={(value) => {\n            if (value) setBlock(value);\n          }}\n          options={{\n            minimap: { enabled: false },\n            scrollBeyondLastLine: false,\n            scrollbar: { alwaysConsumeMouseWheel: false },\n          }}\n          onMount={(editor) => {\n            editorRef.current = editor;\n            editor.layout();\n          }}\n        />\n      </div>\n      <MarkdownRules interpreter={interpreter} rules={block} />\n    </div>\n  );\n};\n\nexport default function Rules() {\n  const { path } = useRouteMatch();\n  return (\n    <>\n      <Navbar>\n        <h1>Entish</h1>\n        <a href=\"//github.com/etherealmachine/entish#readme\">README</a>\n        <div style={{ marginLeft: \"auto\" }}>\n          <span>\n            <a href=\"//github.com/etherealmachine\">James Pettit</a> ©2021\n          </span>\n        </div>\n      </Navbar>\n      <Switch>\n        <Route path={`${path}/:folder/:file`}>\n          <RuleBlock />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import styled from \"astroturf/react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Playground from \"./Playground\";\nimport Rules from \"./Rules\";\n\nconst Container = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  width: 100vw;\n\n  select {\n    padding: 5px;\n    font-size: 0.875rem;\n    border: 0.0625rem solid #375eab;\n    height: 30px;\n  }\n`;\n\nexport const Navbar = styled(\"div\")`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 10px 16px 10px 16px;\n  background-color: #e0ebf5;\n\n  h1 {\n    margin-right: 16px;\n    font-size: 20px;\n    font-family: sans-serif;\n  }\n\n  * {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    margin-right: 12px;\n    border-radius: 5px;\n    box-sizing: border-box;\n  }\n\n  button {\n    border: 1px solid #375eab;\n    font-size: 16px;\n    font-family: sans-serif;\n    background: #375eab;\n    color: white;\n    height: 30px;\n  }\n`;\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/entish/rules\">\n          <Container>\n            <Rules />\n          </Container>\n        </Route>\n        <Route path=\"/entish\">\n          <Container>\n            <Playground />\n          </Container>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}